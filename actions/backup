#!/usr/bin/env python3

import os
import sys
import shutil
import tarfile
import tempfile
from charmhelpers.core import hookenv
sys.path.insert(0, os.path.join(os.environ['CHARM_DIR'], 'lib'))
from charms.layer.weebl import utils, db_connection

hooks = hookenv.Hooks()
tmp_dir = tempfile.mkdtemp()
output_dir = '/home/ubuntu/backup/'


def save_database_dump(weebl_data, filename, destination):
    hookenv.log("Saving dump of '{database}' database from {host}".format(
        **weebl_data))
    full_path = os.path.join(destination, filename)
    if db_connection.save_database_dump(weebl_data, full_path):
        hookenv.log("Database dump file saved to {}".format(destination))


def make_tarfile(tarball_name, dir_to_compress, path):
    utils.mkdir_p(path)
    tarball = os.path.join(path, tarball_name)
    try:
        with tarfile.open(tarball, "w:gz") as tar:
            tar.add(dir_to_compress, arcname="weebl_data")
        hookenv.log("Tarball generated")
    finally:
        shutil.rmtree(dir_to_compress)
        hookenv.log("{} removed".format(dir_to_compress))
    hookenv.log("Tarball available at {}".format(tarball))
    return tarball


@hooks.hook("backup")
def update():
    """ Back-up current Weebl database. """
    msg = "Backing up Weebl database and bundle images to tarball."
    hookenv.log(msg)
    hookenv.status_set('maintenance', msg)
    now = utils.generate_timestamp()
    tarball_name = "weebl_backup_" + now + ".tar.gz"
    filename = "database_backup_" + now + ".dump"
    destination = os.path.join(tmp_dir, "weebl_backup_" + now)
    weebl_data = utils.get_weebl_data()
    os.makedirs(destination, exist_ok=True)
    save_database_dump(weebl_data, filename, destination)
    utils.backup_testrun_svgs(destination)
    output = make_tarfile(tarball_name, destination, output_dir)
    shutil.rmtree(tmp_dir)
    hookenv.action_set({
        "output": output
    })
    hookenv.status_set('active', 'Ready')
    return output


if __name__ == "__main__":
    hooks.execute(sys.argv)
